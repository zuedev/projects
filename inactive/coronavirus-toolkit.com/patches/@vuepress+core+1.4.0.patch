diff --git a/node_modules/@vuepress/core/.temp/app-enhancers/0.js b/node_modules/@vuepress/core/.temp/app-enhancers/0.js
new file mode 100644
index 0000000..e639ce0
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/app-enhancers/0.js
@@ -0,0 +1,2 @@
+import "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/lib/node/internal-plugins/style/client.js"
+export default {}
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/app-enhancers/1.js b/node_modules/@vuepress/core/.temp/app-enhancers/1.js
new file mode 100644
index 0000000..8c907b6
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/app-enhancers/1.js
@@ -0,0 +1,2 @@
+import "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/plugin-nprogress/enhanceAppFile.js"
+export default {}
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/app-enhancers/2.js b/node_modules/@vuepress/core/.temp/app-enhancers/2.js
new file mode 100644
index 0000000..6c7cbe2
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/app-enhancers/2.js
@@ -0,0 +1 @@
+export { default } from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/vuepress-plugin-smooth-scroll/lib/enhanceApp.js"
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/app-enhancers/3.js b/node_modules/@vuepress/core/.temp/app-enhancers/3.js
new file mode 100644
index 0000000..4293b36
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/app-enhancers/3.js
@@ -0,0 +1 @@
+export { default } from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/vuepress-plugin-flowchart/lib/client.js"
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/app-enhancers/data-block.js b/node_modules/@vuepress/core/.temp/app-enhancers/data-block.js
new file mode 100644
index 0000000..08e2885
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/app-enhancers/data-block.js
@@ -0,0 +1,7 @@
+export default ({ Vue }) => { Vue.mixin({
+    computed: {
+      $dataBlock() {
+        return this.$options.__data__block__
+      }
+    }
+  }) }
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/app-enhancers/global-components-1.js b/node_modules/@vuepress/core/.temp/app-enhancers/global-components-1.js
new file mode 100644
index 0000000..39e4d3e
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/app-enhancers/global-components-1.js
@@ -0,0 +1,6 @@
+import Vue from 'vue'
+
+Vue.component("Badge", () => import("/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/theme-default/global-components/Badge"))
+
+
+export default {}
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/internal/app-enhancers.js b/node_modules/@vuepress/core/.temp/internal/app-enhancers.js
new file mode 100644
index 0000000..7b6dd40
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/internal/app-enhancers.js
@@ -0,0 +1,15 @@
+import m0 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/.temp/app-enhancers/0.js"
+import m1 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/.temp/app-enhancers/data-block.js"
+import m2 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/.temp/app-enhancers/global-components-1.js"
+import m3 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/.temp/app-enhancers/1.js"
+import m4 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/.temp/app-enhancers/2.js"
+import m5 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/.temp/app-enhancers/3.js"
+
+export default [
+  m0,
+  m1,
+  m2,
+  m3,
+  m4,
+  m5
+]
diff --git a/node_modules/@vuepress/core/.temp/internal/global-ui.js b/node_modules/@vuepress/core/.temp/internal/global-ui.js
new file mode 100644
index 0000000..4ad71d6
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/internal/global-ui.js
@@ -0,0 +1 @@
+export default []
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/internal/layout-components.js b/node_modules/@vuepress/core/.temp/internal/layout-components.js
new file mode 100644
index 0000000..9002ebe
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/internal/layout-components.js
@@ -0,0 +1,7 @@
+/**
+ * Generated by "@vuepress/internal-layout-components"
+ */
+export default {
+  "NotFound": () => import("/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/theme-default/layouts/404.vue"),
+  "Layout": () => import("/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/theme-default/layouts/Layout.vue") 
+}
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/internal/page-components.js b/node_modules/@vuepress/core/.temp/internal/page-components.js
new file mode 100644
index 0000000..1c0fa36
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/internal/page-components.js
@@ -0,0 +1,7 @@
+/**
+ * Generated by "@vuepress/internal-page-components"
+ */
+export default {
+  "v-cf5bab70": () => import("/home/zeue/Git/coronavirus-toolkit.com/docs/README.md"),
+  "v-03c2069a": () => import("/home/zeue/Git/coronavirus-toolkit.com/docs/preparing-for-coronavirus-lock-down.md") 
+}
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/internal/root-mixins.js b/node_modules/@vuepress/core/.temp/internal/root-mixins.js
new file mode 100644
index 0000000..5a21e12
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/internal/root-mixins.js
@@ -0,0 +1,14 @@
+/**
+ * Generated by "@vuepress/internal-root-mixins"
+ */
+import m0 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/lib/client/root-mixins/updateMeta.js"
+import m1 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/plugin-active-header-links/clientRootMixin.js"
+import m2 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/plugin-nprogress/clientRootMixin.js"
+import m3 from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/vuepress-plugin-smooth-scroll/lib/clientRootMixin.js"
+
+export default [
+  m0,
+  m1,
+  m2,
+  m3
+]
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/internal/routes.js b/node_modules/@vuepress/core/.temp/internal/routes.js
new file mode 100644
index 0000000..88f12ea
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/internal/routes.js
@@ -0,0 +1,35 @@
+/**
+ * Generated by "@vuepress/internal-routes"
+ */
+
+import { injectComponentOption, ensureAsyncComponentsLoaded } from '@app/util'
+import rootMixins from '@internal/root-mixins'
+import GlobalLayout from "/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/core/lib/client/components/GlobalLayout.vue"
+
+injectComponentOption(GlobalLayout, 'mixins', rootMixins)
+export const routes = [
+  {
+    name: "v-cf5bab70",
+    path: "/",
+    component: GlobalLayout,
+    beforeEnter: (to, from, next) => {
+      ensureAsyncComponentsLoaded("Layout", "v-cf5bab70").then(next)
+    },
+  },
+  {
+    path: "/index.html",
+    redirect: "/"
+  },
+  {
+    name: "v-03c2069a",
+    path: "/preparing-for-coronavirus-lock-down.html",
+    component: GlobalLayout,
+    beforeEnter: (to, from, next) => {
+      ensureAsyncComponentsLoaded("Layout", "v-03c2069a").then(next)
+    },
+  },
+  {
+    path: '*',
+    component: GlobalLayout
+  }
+]
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/internal/siteData.js b/node_modules/@vuepress/core/.temp/internal/siteData.js
new file mode 100644
index 0000000..d88c0e0
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/internal/siteData.js
@@ -0,0 +1,134 @@
+/**
+ * Generated by "@vuepress/internal-site-data"
+ */
+export const siteData = {
+  "title": "",
+  "description": "",
+  "base": "/",
+  "pages": [
+    {
+      "title": "Home",
+      "frontmatter": {},
+      "regularPath": "/",
+      "relativePath": "README.md",
+      "key": "v-cf5bab70",
+      "path": "/",
+      "headers": [
+        {
+          "level": 2,
+          "title": "What is the Coronavirus Toolkit?",
+          "slug": "what-is-the-coronavirus-toolkit"
+        },
+        {
+          "level": 3,
+          "title": "Goal",
+          "slug": "goal"
+        },
+        {
+          "level": 3,
+          "title": "How Can You Help Now?",
+          "slug": "how-can-you-help-now"
+        },
+        {
+          "level": 3,
+          "title": "Week 1 Objective: Preparing for Coronavirus Lock-down (by 27 March 2020)",
+          "slug": "week-1-objective-preparing-for-coronavirus-lock-down-by-27-march-2020"
+        },
+        {
+          "level": 3,
+          "title": "Week 2 Objective: Living in a Household with someone with Coronavirus Symptoms (by 3 April 2020)",
+          "slug": "week-2-objective-living-in-a-household-with-someone-with-coronavirus-symptoms-by-3-april-2020"
+        },
+        {
+          "level": 3,
+          "title": "Call for Individual Action",
+          "slug": "call-for-individual-action"
+        },
+        {
+          "level": 3,
+          "title": "Call for Group or Organizational Action",
+          "slug": "call-for-group-or-organizational-action"
+        },
+        {
+          "level": 3,
+          "title": "How Did the Initiative Come About?",
+          "slug": "how-did-the-initiative-come-about"
+        }
+      ]
+    },
+    {
+      "title": "Preparing for Coronavirus Lock-Down",
+      "frontmatter": {},
+      "regularPath": "/preparing-for-coronavirus-lock-down.html",
+      "relativePath": "preparing-for-coronavirus-lock-down.md",
+      "key": "v-03c2069a",
+      "path": "/preparing-for-coronavirus-lock-down.html",
+      "headers": [
+        {
+          "level": 2,
+          "title": "Preface",
+          "slug": "preface"
+        },
+        {
+          "level": 3,
+          "title": "Who is this for?",
+          "slug": "who-is-this-for"
+        },
+        {
+          "level": 3,
+          "title": "How does it benefit you?",
+          "slug": "how-does-it-benefit-you"
+        },
+        {
+          "level": 3,
+          "title": "What should you do with this?",
+          "slug": "what-should-you-do-with-this"
+        },
+        {
+          "level": 2,
+          "title": "Flowchart",
+          "slug": "flowchart"
+        }
+      ]
+    }
+  ],
+  "themeConfig": {
+    "nav": [
+      {
+        "text": "Home",
+        "link": "/"
+      },
+      {
+        "text": "Post a Suggestion",
+        "link": "#"
+      }
+    ],
+    "sidebar": [
+      {
+        "title": "",
+        "collapsable": false,
+        "children": [
+          "/",
+          "/preparing-for-coronavirus-lock-down"
+        ]
+      }
+    ],
+    "repo": "zeue/coronavirus-toolkit",
+    "repoLabel": "Contribute!",
+    "editLinks": true,
+    "editLinkText": "Help us improve this page!",
+    "smoothScroll": true,
+    "lastUpdated": "Last Updated",
+    "title": "Coronavirus Toolkit",
+    "head": [
+      [
+        "link",
+        {
+          "rel": "icon",
+          "href": "/logo.png"
+        }
+      ]
+    ],
+    "sidebarDepth": 4
+  }
+}
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/palette.styl b/node_modules/@vuepress/core/.temp/palette.styl
new file mode 100644
index 0000000..c42d046
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/palette.styl
@@ -0,0 +1,5 @@
+// Theme's Palette
+// null
+
+// User's Palette
+// null
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/style.styl b/node_modules/@vuepress/core/.temp/style.styl
new file mode 100644
index 0000000..8538f0e
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/style.styl
@@ -0,0 +1,5 @@
+// Theme's Styles
+@import("/home/zeue/Git/coronavirus-toolkit.com/node_modules/@vuepress/theme-default/styles/index.styl")
+
+// User's Styles
+@import("/home/zeue/Git/coronavirus-toolkit.com/docs/.vuepress/styles/index.styl")
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/.temp/transform/ClientComputedMixin.js b/node_modules/@vuepress/core/.temp/transform/ClientComputedMixin.js
new file mode 100644
index 0000000..ec763a9
--- /dev/null
+++ b/node_modules/@vuepress/core/.temp/transform/ClientComputedMixin.js
@@ -0,0 +1,128 @@
+/**
+ * Generated by "@vuepress/internal-transform-modules"
+ */
+'use strict'
+
+/**
+ * Get page data via path (permalink).
+ *
+ * @param {array} pages
+ * @param {string} path
+ * @returns {object}
+ */
+
+function findPageForPath (pages, path) {
+  for (let i = 0; i < pages.length; i++) {
+    const page = pages[i]
+    if (page.path.toLowerCase() === path.toLowerCase()) {
+      return page
+    }
+  }
+  return {
+    path: '',
+    frontmatter: {}
+  }
+}
+
+/**
+ * Expose a function to get ClientComputedMixin constructor.
+ * Note that this file will run in both server and client side.
+ *
+ * @param {object} siteData
+ * @returns {ClientComputedMixin}
+ */
+
+export default siteData => {
+  return class ClientComputedMixin {
+    setPage (page) {
+      this.__page = page
+    }
+
+    get $site () {
+      return siteData
+    }
+
+    get $themeConfig () {
+      return this.$site.themeConfig
+    }
+
+    get $frontmatter () {
+      return this.$page.frontmatter
+    }
+
+    get $localeConfig () {
+      const { locales = {}} = this.$site
+      let targetLang
+      let defaultLang
+      for (const path in locales) {
+        if (path === '/') {
+          defaultLang = locales[path]
+        } else if (this.$page.path.indexOf(path) === 0) {
+          targetLang = locales[path]
+        }
+      }
+      return targetLang || defaultLang || {}
+    }
+
+    get $siteTitle () {
+      return this.$localeConfig.title || this.$site.title || ''
+    }
+
+    get $title () {
+      const page = this.$page
+      const { metaTitle } = this.$page.frontmatter
+      if (typeof metaTitle === 'string') {
+        return metaTitle
+      }
+
+      const siteTitle = this.$siteTitle
+      const selfTitle = page.frontmatter.home ? null : (
+        page.frontmatter.title // explicit title
+        || page.title // inferred title
+      )
+      return siteTitle
+        ? selfTitle
+          ? (selfTitle + ' | ' + siteTitle)
+          : siteTitle
+        : selfTitle || 'VuePress'
+    }
+
+    get $description () {
+      // #565 hoist description from meta
+      const description = getMetaDescription(this.$page.frontmatter.meta)
+      if (description) {
+        return description
+      }
+      return this.$page.frontmatter.description || this.$localeConfig.description || this.$site.description || ''
+    }
+
+    get $lang () {
+      return this.$page.frontmatter.lang || this.$localeConfig.lang || 'en-US'
+    }
+
+    get $localePath () {
+      return this.$localeConfig.path || '/'
+    }
+
+    get $themeLocaleConfig () {
+      return (this.$site.themeConfig.locales || {})[this.$localePath] || {}
+    }
+
+    get $page () {
+      if (this.__page) {
+        return this.__page
+      }
+      return findPageForPath(
+        this.$site.pages,
+        this.$route.path
+      )
+    }
+  }
+}
+
+function getMetaDescription (meta) {
+  if (meta) {
+    const descriptionMeta = meta.filter(item => item.name === 'description')[0]
+    if (descriptionMeta) return descriptionMeta.content
+  }
+}
\ No newline at end of file
diff --git a/node_modules/@vuepress/core/lib/client/index.dev.html b/node_modules/@vuepress/core/lib/client/index.dev.html
index 06f743c..d56f473 100644
--- a/node_modules/@vuepress/core/lib/client/index.dev.html
+++ b/node_modules/@vuepress/core/lib/client/index.dev.html
@@ -4,6 +4,7 @@
     <meta charset="utf-8">
     <meta name="viewport" content="width=device-width,initial-scale=1">
     <title></title>
+    <script src="https://cdnjs.cloudflare.com/ajax/libs/mermaid/8.4.8/mermaid.min.js"></script>
   </head>
   <body>
     <div id="app"></div>
